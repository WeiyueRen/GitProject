Git command:
Change text edit: 
git config core.editor "'C:\Program Files (x86)\Notepad++\notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

vim exit:
esc -> :x!

git revert: Create a new commit

git reset: remove files from staging area, the working directory will not be changed.
--hard: Override the change made in local file.

git clean -n show untracked file.

Use git reset -- hard and git clean -f to match the working directory to the remote repository

git commit --amend: Amend the comment message.
Or to combine staged changes with previous commit. --no edit will not change the commit message

Merge other poeples change:
1. git fetch origin: Fetch the new change made by other people to remote branch

2. check difference between working and remote
git checkout master
git log --oneline master..origin/master: Filter to see what commits have been added to the upstream master

3. git merge origin/master

origin/master: remote; master: local

git pull origin will do the same
After you commit the local change, the pull command will show the conflict between your local file and remote file.

git config --global branch.autosetuprebase always

git branch <branch>: Create new branch
git checkout <branch>: Switch to new branch
# Edit file and commit file
git checkout master: go back to master
git merge <branch>: Merge branch to master


git rebase:
Go back to specific branch: git checkout <branch>
git rebase master 
#Then resolve the conflict and complete rebase; Then go back to master
git checkout master
git merge <branch>
